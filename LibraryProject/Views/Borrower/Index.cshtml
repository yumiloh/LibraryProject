@model IEnumerable<LibraryProject.Models.Book>
@using LibraryProject.ViewModels

@{
    ViewBag.Title = "Index";
    var borrowedBooks = ViewBag.BorrowedBooks as List<BookViewModel>;
}

<div class="nav navbar-nav navbar-right"></div>

<h2>Available Books</h2>

<p>@Html.ActionLink("Books Borrowed", "BooksBorrowed")</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ISBN)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumberOfPages)
        </th>
        <th>
            @Html.DisplayName("Available Copies")
        </th>
        <th></th>
        <th></th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ISBN)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfPages)
            </td>
            <td>
                @Html.Raw(item.BookCopies - item.BorrowedCopies)
            </td>

            @if ((item.BookCopies - item.BorrowedCopies) > 0)
            {
                <td>
                    @Html.ActionLink("Borrow", "Borrow", new { id = item.ID })
                </td>
            }
            else
            {
                <td></td>
            }

            @if (borrowedBooks.Select(x => x.Book.Title).Contains((item.Title)))
            {
                <td>
                    @Html.ActionLink("Return", "Return", new { id = item.ID })
                </td>
            }
            else
            {
                <td></td>
            }
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.ID })
            </td>
        </tr>
    }
</table>
